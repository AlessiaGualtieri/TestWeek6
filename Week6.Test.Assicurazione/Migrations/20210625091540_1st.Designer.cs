// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Week6.Test.Assicurazione.Context;

namespace Week6.Test.Assicurazione.Migrations
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20210625091540_1st")]
    partial class _1st
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Week6.Test.Assicurazione.Models.Client", b =>
                {
                    b.Property<string>("CF")
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength(true);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CF");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            CF = "DFNBLL67D56P874P",
                            Address = "via Bernabei, 50",
                            Name = "Dafne",
                            Surname = "Bella"
                        });
                });

            modelBuilder.Entity("Week6.Test.Assicurazione.Models.Policy", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientCF")
                        .HasColumnType("nchar(16)");

                    b.Property<DateTime>("DateDrafting")
                        .HasColumnType("datetime2");

                    b.Property<float>("InsuredAmount")
                        .HasColumnType("real");

                    b.Property<float>("MonthlyRate")
                        .HasColumnType("real");

                    b.Property<string>("Policy type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.HasIndex("ClientCF");

                    b.ToTable("Policy");

                    b.HasDiscriminator<string>("Policy type").HasValue("Policy");
                });

            modelBuilder.Entity("Week6.Test.Assicurazione.Models.CarInsurance", b =>
                {
                    b.HasBaseType("Week6.Test.Assicurazione.Models.Policy");

                    b.Property<int>("Displacement")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true);

                    b.HasDiscriminator().HasValue("Car insurance");

                    b.HasData(
                        new
                        {
                            Number = 1,
                            DateDrafting = new DateTime(2019, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsuredAmount = 15000f,
                            MonthlyRate = 145.87f,
                            Displacement = 7,
                            Plate = "CP026"
                        });
                });

            modelBuilder.Entity("Week6.Test.Assicurazione.Models.LifePolicy", b =>
                {
                    b.HasBaseType("Week6.Test.Assicurazione.Models.Policy");

                    b.Property<int>("AgeInsured")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Life policy");

                    b.HasData(
                        new
                        {
                            Number = 3,
                            DateDrafting = new DateTime(2019, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsuredAmount = 15000f,
                            MonthlyRate = 145.87f,
                            AgeInsured = 55
                        });
                });

            modelBuilder.Entity("Week6.Test.Assicurazione.Models.TheftPolicy", b =>
                {
                    b.HasBaseType("Week6.Test.Assicurazione.Models.Policy");

                    b.Property<int>("PercentageCovered")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Threft policy");

                    b.HasData(
                        new
                        {
                            Number = 2,
                            DateDrafting = new DateTime(2019, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsuredAmount = 15000f,
                            MonthlyRate = 145.87f,
                            PercentageCovered = 15
                        });
                });

            modelBuilder.Entity("Week6.Test.Assicurazione.Models.Policy", b =>
                {
                    b.HasOne("Week6.Test.Assicurazione.Models.Client", "Client")
                        .WithMany("Policies")
                        .HasForeignKey("ClientCF");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Week6.Test.Assicurazione.Models.Client", b =>
                {
                    b.Navigation("Policies");
                });
#pragma warning restore 612, 618
        }
    }
}
